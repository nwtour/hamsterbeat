// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6-devel
// 	protoc        v3.21.12
// source: hamsterbeat.proto

package hamsterbeat_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HamsterbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Animaltypeid  int64                  `protobuf:"varint,1,opt,name=animaltypeid,proto3" json:"animaltypeid,omitempty"`
	Animalid      int64                  `protobuf:"varint,2,opt,name=animalid,proto3" json:"animalid,omitempty"`
	Heartbeat     int64                  `protobuf:"varint,3,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HamsterbeatRequest) Reset() {
	*x = HamsterbeatRequest{}
	mi := &file_hamsterbeat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HamsterbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HamsterbeatRequest) ProtoMessage() {}

func (x *HamsterbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hamsterbeat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HamsterbeatRequest.ProtoReflect.Descriptor instead.
func (*HamsterbeatRequest) Descriptor() ([]byte, []int) {
	return file_hamsterbeat_proto_rawDescGZIP(), []int{0}
}

func (x *HamsterbeatRequest) GetAnimaltypeid() int64 {
	if x != nil {
		return x.Animaltypeid
	}
	return 0
}

func (x *HamsterbeatRequest) GetAnimalid() int64 {
	if x != nil {
		return x.Animalid
	}
	return 0
}

func (x *HamsterbeatRequest) GetHeartbeat() int64 {
	if x != nil {
		return x.Heartbeat
	}
	return 0
}

type HamsterbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HamsterbeatResponse) Reset() {
	*x = HamsterbeatResponse{}
	mi := &file_hamsterbeat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HamsterbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HamsterbeatResponse) ProtoMessage() {}

func (x *HamsterbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hamsterbeat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HamsterbeatResponse.ProtoReflect.Descriptor instead.
func (*HamsterbeatResponse) Descriptor() ([]byte, []int) {
	return file_hamsterbeat_proto_rawDescGZIP(), []int{1}
}

func (x *HamsterbeatResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_hamsterbeat_proto protoreflect.FileDescriptor

const file_hamsterbeat_proto_rawDesc = "" +
	"\n" +
	"\x11hamsterbeat.proto\x12\x10hamsterbeat.grpc\"r\n" +
	"\x12HamsterbeatRequest\x12\"\n" +
	"\fanimaltypeid\x18\x01 \x01(\x03R\fanimaltypeid\x12\x1a\n" +
	"\banimalid\x18\x02 \x01(\x03R\banimalid\x12\x1c\n" +
	"\theartbeat\x18\x03 \x01(\x03R\theartbeat\"-\n" +
	"\x13HamsterbeatResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result2c\n" +
	"\vHamsterbeat\x12T\n" +
	"\x05Pulse\x12$.hamsterbeat.grpc.HamsterbeatRequest\x1a%.hamsterbeat.grpc.HamsterbeatResponseB\x12Z\x10hamsterbeat.grpcb\x06proto3"

var (
	file_hamsterbeat_proto_rawDescOnce sync.Once
	file_hamsterbeat_proto_rawDescData []byte
)

func file_hamsterbeat_proto_rawDescGZIP() []byte {
	file_hamsterbeat_proto_rawDescOnce.Do(func() {
		file_hamsterbeat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_hamsterbeat_proto_rawDesc), len(file_hamsterbeat_proto_rawDesc)))
	})
	return file_hamsterbeat_proto_rawDescData
}

var file_hamsterbeat_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_hamsterbeat_proto_goTypes = []any{
	(*HamsterbeatRequest)(nil),  // 0: hamsterbeat.grpc.HamsterbeatRequest
	(*HamsterbeatResponse)(nil), // 1: hamsterbeat.grpc.HamsterbeatResponse
}
var file_hamsterbeat_proto_depIdxs = []int32{
	0, // 0: hamsterbeat.grpc.Hamsterbeat.Pulse:input_type -> hamsterbeat.grpc.HamsterbeatRequest
	1, // 1: hamsterbeat.grpc.Hamsterbeat.Pulse:output_type -> hamsterbeat.grpc.HamsterbeatResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_hamsterbeat_proto_init() }
func file_hamsterbeat_proto_init() {
	if File_hamsterbeat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_hamsterbeat_proto_rawDesc), len(file_hamsterbeat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hamsterbeat_proto_goTypes,
		DependencyIndexes: file_hamsterbeat_proto_depIdxs,
		MessageInfos:      file_hamsterbeat_proto_msgTypes,
	}.Build()
	File_hamsterbeat_proto = out.File
	file_hamsterbeat_proto_goTypes = nil
	file_hamsterbeat_proto_depIdxs = nil
}
